@model NameGenMvcApp.Models.UserResponse

@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Bootstrap 101 Template</title>

    <!-- Bootstrap -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
<body>
    <h1>Hello, world!</h1>

    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="js/bootstrap.min.js"></script>
</body>
</html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>CharacterInfoForm</title>
</head>
<body >
    <div align="right">
        <font color="gray">
            Copyright 2017 Erik Ring-Walters
        </font>
    </div>
    <center>
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary()
            <p>
                Race:
                @Html.DropDownListFor(x => x.Race, new[]
{
            new SelectListItem() {Text = "Any",
           Value = "Any"},
           new SelectListItem() {Text = "Human",
           Value = "Human"},
           new SelectListItem() { Text = "Elf",
           Value = "Elf"},
            new SelectListItem() {Text = "Orc",
           Value = "Orc"},
           })

                Sex:

                @Html.DropDownListFor(x => x.Sex, new[]
 {
               new SelectListItem() { Text = "Any",
              Value = "Any" },
           new SelectListItem() {Text = "Male",
           Value = "Male"},
           new SelectListItem() { Text = "Female",
           Value = "Female"}
           })

                <input type="submit" value="Generate!" />
            </p>


            <p>
          <!-- testing whitespace. -->
            </p>
            @*@Html.TextBoxFor(model => model.GeneratedName, new { style="width: 30 px;"});*@
           
            <input type="text" value="@Model.GeneratedName" style="width: 30 px;"/>
        }

        <span>
            @*@Html.ValueFor(x => x.GeneratedName) </br>*@
        </span>
    </center>
  
   
</body>
</html>
